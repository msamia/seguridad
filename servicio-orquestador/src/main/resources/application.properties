############################################################
# 1) Configuración básica del microservicio “servicio-orquestador”
############################################################
spring.application.name=servicio-orquestador
server.port=8095

# ==============================
# Configuración de la base de datos (MariaDB)
# ==============================
spring.datasource.url=jdbc:mariadb://localhost:3406/orquestador?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=validate

# ==============================
# Liquibase
# ==============================
spring.liquibase.change-log=classpath:db/changelog/changelog-master.xml

# Logging a archivo (se creará logs/servicio-orquestador.log)
logging.file.name=logs/servicio-orquestador.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %msg%n

############################################################
# 2) Eureka Client (descubrimiento de servicios)
############################################################
eureka.client.enabled=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# DEBUG en Eureka para ver en detalle registro y descubrimiento
logging.level.com.netflix.discovery=DEBUG
logging.level.com.netflix.loadbalancer=DEBUG

############################################################
# 3) Feign Client (URLs de Empleado y Contrato)
############################################################
#  - Estas dos claves son “custom” y las utilizarás en tus interfaces @FeignClient.
#  - Para que IntelliJ no las marque como “Unknown property”, ver la sección B más abajo.
empleado.service.url=lb://servicio-empleado
contrato.service.url=lb://servicio-contrato

# === CORRECCIÓN: Feign timeouts y logging (Spring Cloud OpenFeign 4.x) ===
# Las propiedades deben ir prefijadas con "spring.cloud.openfeign.client.config":
spring.cloud.openfeign.client.config.default.connectTimeout=5000
spring.cloud.openfeign.client.config.default.readTimeout=10000
spring.cloud.openfeign.client.config.default.loggerLevel=full

# Nivel de logging para Feign en debug (peticiones/respuestas completas)
logging.level.org.springframework.cloud.openfeign=DEBUG
logging.level.feign.Logger=DEBUG

############################################################
# 4) Kafka Producer (para publicar eventos de compensación)
############################################################
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.template.default-topic=saga.compensated

############################################################
# 5) Resilience4j Configuration (CircuitBreaker, RateLimiter,
#    TimeLimiter y Bulkhead)
############################################################

# 5.1) CircuitBreaker – configuración base "default"
resilience4j.circuitbreaker.configs.default.slidingWindowSize=50
resilience4j.circuitbreaker.configs.default.failureRateThreshold=20
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=30s
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
# (Se omite 'recordExceptions' para evitar dependencias extra.)

# 5.2) CircuitBreaker para microservicios externos (Empleado y Contrato)
resilience4j.circuitbreaker.instances.servicio-empleado.baseConfig=default
resilience4j.circuitbreaker.instances.servicio-contrato.baseConfig=default

# 5.3) CircuitBreaker para pasos de la SAGA
resilience4j.circuitbreaker.instances.crearEmpleadoCB.baseConfig=default
resilience4j.circuitbreaker.instances.crearContratoCB.baseConfig=default
resilience4j.circuitbreaker.instances.compensacionCB.baseConfig=default

# 5.4) RateLimiter – configuración base "default"
resilience4j.ratelimiter.configs.default.limitForPeriod=100
resilience4j.ratelimiter.configs.default.limitRefreshPeriod=1s
resilience4j.ratelimiter.configs.default.timeoutDuration=500ms

# 5.5) RateLimiter para microservicios externos
resilience4j.ratelimiter.instances.servicio-empleado.baseConfig=default
resilience4j.ratelimiter.instances.servicio-contrato.baseConfig=default

# 5.6) RateLimiter para pasos de la SAGA
resilience4j.ratelimiter.instances.crearEmpleadoCB.baseConfig=default
resilience4j.ratelimiter.instances.crearContratoCB.baseConfig=default

# 5.7) TimeLimiter – configuración base "default"
resilience4j.timelimiter.configs.default.timeoutDuration=5s

# 5.8) TimeLimiter para microservicios externos
resilience4j.timelimiter.instances.servicio-empleado.baseConfig=default
resilience4j.timelimiter.instances.servicio-contrato.baseConfig=default

# 5.9) Retry para microservicios externos
resilience4j.retry.instances.empleadoRetry.maxAttempts=3
resilience4j.retry.instances.empleadoRetry.waitDuration=2s
resilience4j.retry.instances.contratoRetry.maxAttempts=3
resilience4j.retry.instances.contratoRetry.waitDuration=2s

# 5.10) TimeLimiter para pasos de la SAGA
resilience4j.timelimiter.instances.crearEmpleadoCB.baseConfig=default
resilience4j.timelimiter.instances.crearContratoCB.baseConfig=default

# 5.11) Bulkhead – configuración base "default"
resilience4j.bulkhead.configs.default.maxConcurrentCalls=20
resilience4j.bulkhead.configs.default.maxWaitDuration=1s

# 5.11) Bulkhead para microservicios externos
resilience4j.bulkhead.instances.servicio-empleado.baseConfig=default
resilience4j.bulkhead.instances.servicio-contrato.baseConfig=default

# 5.12) Bulkhead para pasos de la SAGA
resilience4j.bulkhead.instances.crearEmpleadoCB.baseConfig=default
resilience4j.bulkhead.instances.crearContratoCB.baseConfig=default
resilience4j.bulkhead.instances.compensacionCB.baseConfig=default

############################################################
# 6) Actuator / Metrics / Health Checks
############################################################
# Actuator no utiliza el prefijo "resilience4j." para los endpoints a partir de
# Spring Boot 3.x. Se corrige la lista para exponer correctamente los
# CircuitBreakers, RateLimiters y Bulkheads.
management.endpoints.web.exposure.include=health,info,metrics,prometheus,loggers,httptrace,env,beans,circuitbreakers,ratelimiters,bulkheads
# Habilita el endpoint de Resilience4J para consultar el estado de los circuit breakers
management.endpoint.circuitbreakers.enabled=true

management.endpoint.health.show-details=always

# Habilitar indicadores de health para circuitbreakers, ratelimiters y bulkheads de Resilience4j
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.health.resilience4jbulkhead.enabled=true

############################################################
# 7) Logging global
############################################################
logging.level.root=INFO
logging.level.ar.org.hospitalcuencaalta=DEBUG
logging.level.org.springframework.statemachine=DEBUG
logging.level.io.github.resilience4j=DEBUG
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=INFO

############################################################
# 8) Otros ajustes
############################################################
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.main.allow-bean-definition-overriding=true

# SpringDoc configuration
springdoc.packages-to-scan=ar.org.hospitalcuencaalta.servicio_orquestador.controlador

# Spring Boot Admin
spring.boot.admin.client.url=http://localhost:9090
spring.boot.admin.client.instance.service-url=http://localhost:${server.port}
spring.boot.admin.client.instance.management-base-url=http://localhost:${server.port}
#spring.boot.admin.client.instance.prefer-ip=true
eureka.instance.prefer-ip-address=true
spring.boot.admin.client.instance.metadata.swagger-url=http://localhost:${server.port}/swagger-ui.html

logging.level.de.codecentric.boot.admin.client.registration=ERROR
