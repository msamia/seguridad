spring.application.name=servicio-seguridad
server.port=8181

# ==============================
# Configuración de la base de datos (MariaDB)
# ==============================
spring.datasource.url=jdbc:mariadb://localhost:3406/empleado?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=validate

# ==============================
# Liquibase
# ==============================
spring.liquibase.change-log=classpath:db/changelog/changelog-master.xml

# ==============================
# Eureka
# ==============================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Preferir la IP si lo necesitas (opcional)
#eureka.instance.prefer-ip-address=true
# Generar un instance-id único
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# ==============================
# Feign (timeouts)
# ==============================
#feign.client.config.default.connectTimeout=2000
#feign.client.config.default.readTimeout=5000

# ==============================
# Kafka Bootstrap
# ==============================
spring.kafka.bootstrap-servers=localhost:9092

# ==============================
# Kafka Consumer (listeners)
# ==============================
spring.kafka.consumer.group-id=grupo-servicio-empleado
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Permitir paquetes para deserializar JSON de consumidores
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ==============================
# Kafka Producer (enviar EmpleadoDto como JSON)
# ==============================
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# (Opcional) evitar headers adicionales de tipo en JSON
spring.kafka.producer.properties.spring.json.add.type.headers=true

# SpringDoc configuration
springdoc.packages-to-scan=ar.org.hospitalcuencaalta.servicio_empleado.controlador

# Use default OpenAPI groups and paths


# Spring Boot Admin
spring.boot.admin.client.url=http://localhost:9090
spring.boot.admin.client.instance.service-url=http://localhost:${server.port}
spring.boot.admin.client.instance.management-base-url=http://localhost:${server.port}
spring.boot.admin.client.instance.prefer-ip=true
eureka.instance.prefer-ip-address=true
spring.boot.admin.client.instance.metadata.swagger-url=http://localhost:${server.port}/swagger-ui.html

# Exponer métricas para el monitoreo
management.endpoints.web.exposure.include=health,info,metrics
management.metrics.enable.process.files=true

logging.level.de.codecentric.boot.admin.client.registration=ERROR

# ---------------------------------
#   Seguridad
# ---------------------------------
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://127.0.0.1:8081/realms/rrhh